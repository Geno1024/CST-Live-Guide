name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache apt packages
        id: cache-apt
        uses: actions/cache@v2
        with:
          path: ~/apt-cache
          key: ${{ runner.os }}-apt
      - name: Download `apt` Packages if Cache Not Exists
        if: steps.cache-apt.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -d --no-install-recommends texlive-xetex texlive-lang-chinese texlive-bibtex-extra texlive-plain-generic biber texlive-science
          mkdir ~/apt-cache
          sudo cp /var/cache/apt/archives/*.deb ~/apt-cache
      - name: Copy `apt` Packages if Cache Exists
        if: steps.cache-apt.outputs.cache-hit == 'true'
        run: |
          sudo cp ~/apt-cache/*.deb /var/cache/apt/archives
      - name: Install TeXLive and Fonts
        run: |
          sudo apt install --no-install-recommends texlive-xetex texlive-lang-chinese texlive-bibtex-extra texlive-plain-generic biber texlive-science
      - name: Install TeX Package
        env:
          TEXMFHOME: /usr/share/texlive/texmf-dist
        run: |
          sudo tlmgr install biblatex-gb7714-2015 --verify-repo=none || sudo updmap-sys
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Count
        env:
          BUILD_COUNT_SERVER: ${{ secrets.BUILD_COUNT_SERVER }}
        run: |
          [[ -n $BUILD_COUNT_SERVER ]] && curl -so build.txt "$BUILD_COUNT_SERVER"/CST-Live-Guide4 || echo -n "LOCAL" | tee build.txt
      - name: Word Count
        run: |
          detex CST-Live-Guide.tex | wc -m | tee wordcount.txt
      - name: Build
        run: |
          chapters=$(find ./* -maxdepth 1 -type d)
          mkdir build
          for chapter in $chapters; do
            mkdir build/"$chapter"
          done
          xelatex -output-directory=build -shell-escape CST-Live-Guide.tex
          biber --output-directory=build CST-Live-Guide
          xelatex -output-directory=build -shell-escape CST-Live-Guide.tex
          xelatex -output-directory=build -shell-escape CST-Live-Guide.tex
          cp build/CST-Live-Guide.pdf CST-Live-Guide.pdf
      - name: Modify Pdf.js for Web Page
        run: |
          mkdir pdfjs && cd pdfjs || exit
          pdfjs=$(curl -s https://api.github.com/repos/mozilla/pdf.js/releases | jq -r .[0].assets[0].browser_download_url)
          wget "$pdfjs"
          unzip "${pdfjs##*/}"
          mv */* .
          mv viewer.html index.html
          rmdir build web
          rm "${pdfjs##*/}"
          sed -i "s#../build/##" index.html pdf.mjs viewer.mjs
          sed -i "s#../web/##" viewer.mjs
          sed -i "s/compressed.tracemonkey-pldi-09.pdf/CST-Live-Guide.pdf/" viewer.js
      - name: Add View Statistics
        run: |
          cd pdfjs || exit
          sed -i 's#<script src="viewer.js"></script>#<script src="viewer.js"></script><script>var _hmt = _hmt || []; (function() { var hm = document.createElement("script"); hm.src = "https://hm.baidu.com/hm.js?ae57a79677a7d93aa293d74c5bf7faa6"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(hm, s);})();</script>#' index.html
          sed -i "$(($(cat -n index.html | grep document_properties_close | awk '{print $1}') - 1))i<div class=\"separator\"></div>\n<div class=\"row\"><img src=\"https://hits.dwyl.com/Geno1024/CST-Live-Guide.svg\" /></div>" index.html
      - name: Speeding Up Artifact Uploading and Downloading
        run: |
          cd pdfjs || exit
          rm compressed.tracemonkey-pldi-09.pdf
          loc=$(grep zh-CN locale/locale.properties)
          find locale -mindepth 1 ! -wholename "*/zh-CN*" -delete
          echo "$loc" > locale/locale.properties
      - name: Publish Document
        uses: actions/upload-artifact@v3
        with:
          name: CST-Live-Guide
          path: |
            build.txt
            CST-Live-Guide.pdf
      - name: Publish Modified Pdf.js
        uses: actions/upload-artifact@v3
        with:
          name: Modified Pdf.js
          path: |
            pdfjs
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Prepare SSH Key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
      - name: Get Build Output
        uses: actions/download-artifact@v3
        with:
          name: CST-Live-Guide
      - name: Get Modified Pdf.js
        uses: actions/download-artifact@v3
        with:
          name: Modified Pdf.js
      - name: Make Git Repository for Deploying
        run: |
          git init
          git config user.name "Y. Z. Chen"
          git config user.email "754097987@qq.com"
          git add CST-Live-Guide.pdf build.txt
          git add index.html pdf.mjs* pdf.worker.mjs* viewer.mjs* viewer.css images locale cmaps/Adobe-GB1-UCS2.bcmap
          git commit -m "[Pipeline] auto build at $(date +%s) ($(date -Iseconds))"
          git remote add publish git@github.com:Geno1024/CST-Live-Guide
          git push publish master:preview --force
